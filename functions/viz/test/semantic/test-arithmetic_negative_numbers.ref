
Type(None) main()
{
Type(Int) x = (Type(Int) : neg (Type(Int) : neg (Type(Int) : IntLit(5))));
Type(Int) y = (Type(Int) : neg (Type(Int) : IntLit(7)));
  (Type(None) : FuncCall(name: "print", args: (Type(Str) : (StrLit("x = -(-5). expecting 5"))));
  (Type(None) : FuncCall(name: "print_int", args: (Type(Int) : Id(x))));
  (Type(None) : FuncCall(name: "print", args: (Type(Str) : (StrLit("value of @y is -7"))));
  (Type(None) : FuncCall(name: "print_int", args: (Type(Int) : Id(y))));
  (Type(Int) : Assign(Id(y) = (Type(Int) : neg (Type(Int) : Id(y)))));
  (Type(None) : FuncCall(name: "print", args: (Type(Str) : (StrLit("negated value of @y, it is now 7"))));
  (Type(None) : FuncCall(name: "print_int", args: (Type(Int) : Id(y))));
  (Type(None) : FuncCall(name: "print", args: (Type(Str) : (StrLit("expecting 0"))));
  (Type(None) : FuncCall(name: "print_int", args: (Type(Int) : (Type(Int) : IntLit(5)) - (Type(Int) : IntLit(5)))));
  (Type(None) : FuncCall(name: "print", args: (Type(Str) : (StrLit("expecting 10"))));
  (Type(None) : FuncCall(name: "print_int", args: (Type(Int) : (Type(Int) : IntLit(5)) - (Type(Int) : neg (Type(Int) : IntLit(5))))));
Type(Float) xf = (Type(Float) : neg (Type(Float) : neg (Type(Float) : FloatLit(5.))));
Type(Float) yf = (Type(Float) : neg (Type(Float) : FloatLit(7.)));
  (Type(None) : FuncCall(name: "print", args: (Type(Str) : (StrLit("xf = -(-5.0). expecting 5.0"))));
  (Type(None) : FuncCall(name: "print_float", args: (Type(Float) : Id(xf))));
  (Type(None) : FuncCall(name: "print", args: (Type(Str) : (StrLit("value of @yf is -7.0"))));
  (Type(None) : FuncCall(name: "print_int", args: (Type(Int) : Id(y))));
}

