{"ast":null,"code":"var _jsxFileName = \"/Users/jakobdeutsch/Documents/Coding_for_Fun/OnlineVizIDE/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const codeAreaRef = useRef();\n  const [code, setCode] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  const run = async () => {\n    const res = await axios.post(\"http://localhost:5001/run\", {\n      content: code,\n      language: \"python\"\n    });\n    setResult(res.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"textArea\",\n      rows: \"20\",\n      cols: \"75\",\n      value: code,\n      ref: codeAreaRef,\n      onKeyDown: e => {\n        if (e.key == 'Tab') {\n          e.preventDefault();\n          const {\n            selectionStart,\n            selectionEnd\n          } = e.target;\n          const newText = code.substring(0, selectionStart) + '  ' + // Edit this for type tab you want\n          // Here it's 2 spaces per tab\n          code.substring(selectionEnd, code.length);\n          codeAreaRef.current.focus();\n          codeAreaRef.current.value = newText;\n          codeAreaRef.current.setSelectionRange(selectionStart + 2, selectionStart + 2);\n          setCode(newText);\n        }\n      } // onChange={(e) => {\n      //   setCode(e.target.value);\n      // }}\n      // onKeyDown={(e) => {\n      //   if (e.key == 'Tab') {\n      //     e.preventDefault();\n      //     const { selectionStart, selectionEnd } = e.target;\n      //     const newText = code.substring(0, selectionStart) + '    ' + code.substring(selectionEnd, code.length);\n      //     codeAreaRef.current.focus();\n      //     codeAreaRef.current.value = newText;\n      //     codeAreaRef.current.setSelectionRange(selectionStart + 4, selectionStart + 4);\n      //     setCode(newText);\n      //   }\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"run-btn\",\n      onClick: run,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), result]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"AQJ4Qb1L/Wu5X9r87Ubxc6zUSdo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jakobdeutsch/Documents/Coding_for_Fun/OnlineVizIDE/client/src/App.js"],"names":["React","useState","useEffect","useRef","axios","App","codeAreaRef","code","setCode","result","setResult","run","res","post","content","language","data","e","key","preventDefault","selectionStart","selectionEnd","target","newText","substring","length","current","focus","value","setSelectionRange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAMC,WAAW,GAAGH,MAAM,EAA1B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,GAAG,GAAG,YAAY;AACtB,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAW,2BAAX,EAAwC;AAACC,MAAAA,OAAO,EAAEP,IAAV;AAAgBQ,MAAAA,QAAQ,EAAE;AAA1B,KAAxC,CAAlB;AACAL,IAAAA,SAAS,CAACE,GAAG,CAACI,IAAL,CAAT;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAU,MAAA,SAAS,EAAC,UAApB;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,IAAI,EAAC,IAFP;AAGE,MAAA,KAAK,EAAET,IAHT;AAIE,MAAA,GAAG,EAAED,WAJP;AAKE,MAAA,SAAS,EAAGW,CAAD,IAAO;AAChB,YAAIA,CAAC,CAACC,GAAF,IAAS,KAAb,EAAoB;AAClBD,UAAAA,CAAC,CAACE,cAAF;AACA,gBAAM;AAAEC,YAAAA,cAAF;AAAkBC,YAAAA;AAAlB,cAAmCJ,CAAC,CAACK,MAA3C;AAEA,gBAAMC,OAAO,GACXhB,IAAI,CAACiB,SAAL,CAAe,CAAf,EAAkBJ,cAAlB,IACA,IADA,GACO;AACA;AACPb,UAAAA,IAAI,CAACiB,SAAL,CAAeH,YAAf,EAA6Bd,IAAI,CAACkB,MAAlC,CAJF;AAMAnB,UAAAA,WAAW,CAACoB,OAAZ,CAAoBC,KAApB;AACArB,UAAAA,WAAW,CAACoB,OAAZ,CAAoBE,KAApB,GAA4BL,OAA5B;AAEAjB,UAAAA,WAAW,CAACoB,OAAZ,CAAoBG,iBAApB,CACET,cAAc,GAAG,CADnB,EAEEA,cAAc,GAAG,CAFnB;AAKAZ,UAAAA,OAAO,CAACe,OAAD,CAAP;AACD;AACF,OA1BH,CA2BE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxCF;AAAA;AAAA;AAAA;AAAA,YADF,eA2CE;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAEZ,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3CF,EA4CGF,MA5CH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD,CA3DD;;GAAMJ,G;;KAAAA,G;AA6DN,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nconst App = () => {\n  \n  const codeAreaRef = useRef();\n  const [code, setCode] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  \n  const run = async () => {\n    const res = await axios.post(\"http://localhost:5001/run\", {content: code, language: \"python\"});\n    setResult(res.data);\n  }\n\n  return (\n    <div className=\"container\">\n      <textarea className=\"textArea\"\n        rows=\"20\"\n        cols=\"75\"\n        value={code}\n        ref={codeAreaRef}\n        onKeyDown={(e) => {\n          if (e.key == 'Tab') {\n            e.preventDefault();\n            const { selectionStart, selectionEnd } = e.target;\n      \n            const newText =\n              code.substring(0, selectionStart) +\n              '  ' + // Edit this for type tab you want\n                     // Here it's 2 spaces per tab\n              code.substring(selectionEnd, code.length);\n      \n            codeAreaRef.current.focus();\n            codeAreaRef.current.value = newText;\n      \n            codeAreaRef.current.setSelectionRange(\n              selectionStart + 2,\n              selectionStart + 2\n            );\n      \n            setCode(newText);\n          }\n        }}\n        // onChange={(e) => {\n        //   setCode(e.target.value);\n        // }}\n        // onKeyDown={(e) => {\n        //   if (e.key == 'Tab') {\n        //     e.preventDefault();\n        //     const { selectionStart, selectionEnd } = e.target;\n        //     const newText = code.substring(0, selectionStart) + '    ' + code.substring(selectionEnd, code.length);\n        //     codeAreaRef.current.focus();\n        //     codeAreaRef.current.value = newText;\n        //     codeAreaRef.current.setSelectionRange(selectionStart + 4, selectionStart + 4);\n        //     setCode(newText);\n        //   }\n        // }}\n      ></textarea>\n      <button className=\"run-btn\" onClick={run}>Run</button>\n      {result}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}