{"ast":null,"code":"var _jsxFileName = \"/Users/jakobdeutsch/Documents/Coding_for_Fun/OnlineVizIDE/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const codeAreaRef = useRef();\n  const [code, setCode] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const options = [{\n    label: \"AST\",\n    value: \"-a\"\n  }, {\n    label: \"SAST\",\n    value: \"-s\"\n  }, {\n    label: \"LLVM IR\",\n    value: \"-l\"\n  }, {\n    label: \"Tokens\",\n    value: \"-ts\"\n  }];\n  const [selectedOption, setSelectedOption] = useState(options[0].value);\n\n  const run = async () => {\n    const res = await axios.post(\"http://localhost:5001/run\", {\n      content: code,\n      language: \"viz\",\n      args: selectedOption\n    }); // const res = await axios.post(\"/run\", {content: code, language: \"viz\"});\n\n    setResult(res.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"Viz Online\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), \"Result Format:\", /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedOption,\n      onChange: e => setSelectedOption(e.target.value),\n      children: options.map(o => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: o.value,\n          children: o.label\n        }, o.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textArea\",\n        rows: \"20\",\n        cols: \"75\",\n        value: code,\n        ref: codeAreaRef,\n        onChange: e => {\n          setCode(e.target.value);\n        },\n        onKeyDown: e => {\n          if (e.key == 'Tab') {\n            e.preventDefault();\n            const {\n              selectionStart,\n              selectionEnd\n            } = e.target;\n            const newText = code.substring(0, selectionStart) + '    ' + code.substring(selectionEnd, code.length);\n            codeAreaRef.current.focus();\n            codeAreaRef.current.value = newText;\n            codeAreaRef.current.setSelectionRange(selectionStart + 4, selectionEnd + 4);\n            setCode(newText);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textArea\",\n        rows: \"20\",\n        cols: \"75\",\n        value: result,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"run-btn\",\n      onClick: run,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ulkwZcYffs1HlhFLIxjRpunmf7g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jakobdeutsch/Documents/Coding_for_Fun/OnlineVizIDE/client/src/App.js"],"names":["React","useState","useEffect","useRef","axios","App","codeAreaRef","code","setCode","result","setResult","options","label","value","selectedOption","setSelectedOption","run","res","post","content","language","args","data","e","target","map","o","key","preventDefault","selectionStart","selectionEnd","newText","substring","length","current","focus","setSelectionRange"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nconst App = () => {\n  \n  const codeAreaRef = useRef();\n  const [code, setCode] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const options = [{label: \"AST\", value: \"-a\"}, {label: \"SAST\", value: \"-s\"}, {label: \"LLVM IR\", value: \"-l\"}, {label: \"Tokens\", value: \"-ts\"}];\n  const [selectedOption, setSelectedOption] = useState(options[0].value);\n  \n  const run = async () => {\n    const res = await axios.post(\"http://localhost:5001/run\", {content: code, language: \"viz\", args: selectedOption});\n    // const res = await axios.post(\"/run\", {content: code, language: \"viz\"});\n    setResult(res.data);\n  }\n\n  return (\n    <div className=\"page\">\n      <h3 className=\"title\">Viz Online</h3>\n      Result Format:\n      <select\n        value={selectedOption}\n        onChange={e => setSelectedOption(e.target.value)}>\n          {options.map(o => {\n            return <option key={o.value} value={o.value}>{o.label}</option>\n          })}\n      </select>\n        <div className=\"container\">\n          <textarea className=\"textArea\"\n            rows=\"20\"\n            cols=\"75\"\n            value={code}\n            ref={codeAreaRef}\n            onChange={(e) => {\n              setCode(e.target.value);\n            }}\n            onKeyDown={(e) => {\n              if (e.key == 'Tab') {\n                e.preventDefault();\n                const { selectionStart, selectionEnd } = e.target;\n                const newText = code.substring(0, selectionStart) + '    ' + code.substring(selectionEnd, code.length);\n                codeAreaRef.current.focus();\n                codeAreaRef.current.value = newText;\n                codeAreaRef.current.setSelectionRange(selectionStart + 4, selectionEnd + 4);\n                setCode(newText);\n              }\n            }}\n          />\n          <textarea className=\"textArea\"\n            rows=\"20\"\n            cols=\"75\"\n            value={result}\n            disabled={true}\n          />\n        </div>\n        <button className=\"run-btn\" onClick={run}>Run</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}