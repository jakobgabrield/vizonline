{"ast":null,"code":"var _jsxFileName = \"/Users/jakobdeutsch/Documents/Coding_for_Fun/OnlineVizIDE/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const codeAreaRef = useRef();\n  const [code, setCode] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  const run = async () => {\n    const res = await axios.post(\"http://localhost:5001/run\", {\n      content: code,\n      language: \"viz\"\n    }); // const res = await axios.post(\"/run\", {content: code, language: \"viz\"});\n\n    setResult(res.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"Viz Online\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedOption,\n      onChange: e => setSelectedOption(e.target.value),\n      children: /*#__PURE__*/_jsxDEV(\"option\", {\n        value: o.value,\n        children: o.label\n      }, o.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textArea\",\n        rows: \"20\",\n        cols: \"75\",\n        value: code,\n        ref: codeAreaRef,\n        onChange: e => {\n          setCode(e.target.value);\n        },\n        onKeyDown: e => {\n          if (e.key == 'Tab') {\n            e.preventDefault();\n            const {\n              selectionStart,\n              selectionEnd\n            } = e.target;\n            const newText = code.substring(0, selectionStart) + '    ' + code.substring(selectionEnd, code.length);\n            codeAreaRef.current.focus();\n            codeAreaRef.current.value = newText;\n            codeAreaRef.current.setSelectionRange(selectionStart + 4, selectionEnd + 4);\n            setCode(newText);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textArea\",\n        rows: \"20\",\n        cols: \"75\",\n        value: result,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"run-btn\",\n      onClick: run,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"AQJ4Qb1L/Wu5X9r87Ubxc6zUSdo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jakobdeutsch/Documents/Coding_for_Fun/OnlineVizIDE/client/src/App.js"],"names":["React","useState","useEffect","useRef","axios","App","codeAreaRef","code","setCode","result","setResult","run","res","post","content","language","data","selectedOption","e","setSelectedOption","target","value","o","label","key","preventDefault","selectionStart","selectionEnd","newText","substring","length","current","focus","setSelectionRange"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nconst App = () => {\n  \n  const codeAreaRef = useRef();\n  const [code, setCode] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  \n  const run = async () => {\n    const res = await axios.post(\"http://localhost:5001/run\", {content: code, language: \"viz\"});\n    // const res = await axios.post(\"/run\", {content: code, language: \"viz\"});\n    setResult(res.data);\n  }\n\n  return (\n    <div className=\"page\">\n      <h3 className=\"title\">Viz Online</h3>\n      <select\n        value={selectedOption}\n        onChange={e => setSelectedOption(e.target.value)}>\n        <option key={o.value} value={o.value}>{o.label}</option>\n      </select>\n        <div className=\"container\">\n          <textarea className=\"textArea\"\n            rows=\"20\"\n            cols=\"75\"\n            value={code}\n            ref={codeAreaRef}\n            onChange={(e) => {\n              setCode(e.target.value);\n            }}\n            onKeyDown={(e) => {\n              if (e.key == 'Tab') {\n                e.preventDefault();\n                const { selectionStart, selectionEnd } = e.target;\n                const newText = code.substring(0, selectionStart) + '    ' + code.substring(selectionEnd, code.length);\n                codeAreaRef.current.focus();\n                codeAreaRef.current.value = newText;\n                codeAreaRef.current.setSelectionRange(selectionStart + 4, selectionEnd + 4);\n                setCode(newText);\n              }\n            }}\n          />\n          <textarea className=\"textArea\"\n            rows=\"20\"\n            cols=\"75\"\n            value={result}\n            disabled={true}\n          />\n        </div>\n        <button className=\"run-btn\" onClick={run}>Run</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}